 
   Ta duyệt qua các giá trị khả dĩ của độ dài ước T từ 1 đến n (số phần tử của dãy) sao cho T là ước của n (nghĩa là n chia hết cho T). Bởi vì để dãy có thể ghép thành nhiều lần của một dãy con có độ dài T, T phải là ước của n.
 
   Với mỗi giá trị T khả dĩ, ta kiểm tra xem dãy số có được tạo thành từ việc ghép liên tiếp dãy con gồm T phần tử hay không. Cụ thể, ta so sánh mỗi phần tử ở vị trí i (với i \geq T) với phần tử ở vị trí i \mod T (vị trí tương ứng trong chu kỳ). Nếu tất cả các phần tử thỏa mãn điều kiện này, ta kết luận rằng dãy con độ dài T là “ước” của dãy ban đầu.

   Khi tìm được T bé nhất thỏa mãn điều kiện trên, ta in ra T đó (hoặc nếu cần in dãy con, ta in dãy con đầu tiên có độ dài T).


    // Với mọi chỉ số i (0 <= i < n), A[i] = A[i % T]
    for (int T = 1; T <= n; T++) {
        // Nếu T không chia hết cho n thì chắc chắn A không lặp đủ các lần
        if (n % T != 0) continue;
        
        bool ok = true;
        // Kiểm tra từ index T đến n-1 xem có khớp với phần tử tương ứng trong chu kỳ không
        for (int i = T; i < n; i++) {
            if (A[i] != A[i % T]) {
                ok = false;
                break;
            }
        }
        if (ok) {  // T là chu kỳ lặp lại của A
            cout << T << endl;
            return 0;
        }
    }
    
    return 0;
}
